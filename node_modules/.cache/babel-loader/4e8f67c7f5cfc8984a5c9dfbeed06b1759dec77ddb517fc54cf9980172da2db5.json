{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/apps/physics/physics_engine/physics-engine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport CollisionInfo from './CollisionInfo';\nimport KeyHandler from './KeyHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n\n  // ... (rest of your App component code)\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 450;\n\n    // Initial objects setup\n    let r1 = new Rectangle(new Vec2(200, 200), 40, 40);\n    allObjectsRef.current = [r1];\n    const runGameLoop = () => {\n      updateGameObjects();\n      requestAnimationFrame(runGameLoop);\n    };\n    runGameLoop();\n\n    // Add new rectangles at random positions every 5 seconds\n    const intervalId = setInterval(() => {\n      const canvas = canvasRef.current;\n      const width = canvas.width;\n      const height = canvas.height;\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n      let r1 = new Rectangle(new Vec2(randomX, randomY), 40, 40);\n      allObjectsRef.current = [...allObjectsRef.current, r1];\n    }, 5000);\n    return () => {\n      clearInterval(intervalId); // Clean up the interval on component unmount\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeyHandler, {\n      allObjectsRef: allObjectsRef,\n      gObjectNumRef: gObjectNumRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SOGOVYuSq/uj4TEw+yZ+THsPLTU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","Vec2","Rectangle","CollisionInfo","KeyHandler","jsxDEV","_jsxDEV","App","_s","canvasRef","allObjectsRef","gObjectNumRef","canvas","current","width","height","r1","runGameLoop","updateGameObjects","requestAnimationFrame","intervalId","setInterval","randomX","Math","random","randomY","clearInterval","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/apps/physics/physics_engine/physics-engine/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport CollisionInfo from './CollisionInfo';\nimport KeyHandler from './KeyHandler';\n\nconst App = () => {\n  const canvasRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n\n  // ... (rest of your App component code)\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 450;\n\n    // Initial objects setup\n    let r1 = new Rectangle(new Vec2(200, 200), 40, 40);\n    allObjectsRef.current = [r1];\n\n    const runGameLoop = () => {\n      updateGameObjects();\n      requestAnimationFrame(runGameLoop);\n    };\n\n    runGameLoop();\n\n    // Add new rectangles at random positions every 5 seconds\n    const intervalId = setInterval(() => {\n      const canvas = canvasRef.current;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n\n      let r1 = new Rectangle(new Vec2(randomX, randomY), 40, 40);\n      allObjectsRef.current = [...allObjectsRef.current, r1];\n    }, 5000);\n\n    return () => {\n      clearInterval(intervalId);  // Clean up the interval on component unmount\n    };\n  }, []);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} style={{ border: '1px solid black' }}></canvas>\n      <KeyHandler allObjectsRef={allObjectsRef} gObjectNumRef={gObjectNumRef} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMU,aAAa,GAAGV,MAAM,CAAC,EAAE,CAAC;EAChC,MAAMW,aAAa,GAAGX,MAAM,CAAC,CAAC,CAAC;;EAE/B;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChCD,MAAM,CAACE,KAAK,GAAG,GAAG;IAClBF,MAAM,CAACG,MAAM,GAAG,GAAG;;IAEnB;IACA,IAAIC,EAAE,GAAG,IAAId,SAAS,CAAC,IAAID,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClDS,aAAa,CAACG,OAAO,GAAG,CAACG,EAAE,CAAC;IAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBC,iBAAiB,CAAC,CAAC;MACnBC,qBAAqB,CAACF,WAAW,CAAC;IACpC,CAAC;IAEDA,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMG,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMT,MAAM,GAAGH,SAAS,CAACI,OAAO;MAChC,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK;MAC1B,MAAMC,MAAM,GAAGH,MAAM,CAACG,MAAM;MAE5B,MAAMO,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGV,KAAK;MACrC,MAAMW,OAAO,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGT,MAAM;MAEtC,IAAIC,EAAE,GAAG,IAAId,SAAS,CAAC,IAAID,IAAI,CAACqB,OAAO,EAAEG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1Df,aAAa,CAACG,OAAO,GAAG,CAAC,GAAGH,aAAa,CAACG,OAAO,EAAEG,EAAE,CAAC;IACxD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXU,aAAa,CAACN,UAAU,CAAC,CAAC,CAAE;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,GAAG,EAAEnB,SAAU;MAACoB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACvE5B,OAAA,CAACF,UAAU;MAACM,aAAa,EAAEA,aAAc;MAACC,aAAa,EAAEA;IAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA/CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}