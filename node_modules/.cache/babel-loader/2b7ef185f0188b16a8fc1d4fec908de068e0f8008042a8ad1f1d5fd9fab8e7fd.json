{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/apps/physics/physics_engine/React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport CollisionInfo from './CollisionInfo';\nimport KeyHandler from './KeyHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n  const positionalCorrectionFlag = true;\n  const relaxationCount = 15;\n  const mPosCorrectionRate = 0.8;\n  const updateGameObjects = () => {\n    const container = containerRef.current;\n    const width = container.clientWidth;\n    const height = container.clientHeight;\n    allObjectsRef.current.forEach(obj => {\n      obj.update({\n        width,\n        height\n      });\n      obj.draw(container);\n    });\n    const collisionInfo = new CollisionInfo();\n    const drawCollisionInfo = collisionInfo => {\n      // Use DOM elements to show collision info if needed\n      const line = document.createElement('div');\n      line.style.position = 'absolute';\n      line.style.width = '2px';\n      line.style.backgroundColor = 'green';\n      line.style.left = `${collisionInfo.mStart.x}px`;\n      line.style.top = `${collisionInfo.mStart.y}px`;\n      line.style.height = `${Math.hypot(collisionInfo.mEnd.x - collisionInfo.mStart.x, collisionInfo.mEnd.y - collisionInfo.mStart.y)}px`;\n      line.style.transformOrigin = '0 0';\n      line.style.transform = `rotate(${Math.atan2(collisionInfo.mEnd.y - collisionInfo.mStart.y, collisionInfo.mEnd.x - collisionInfo.mStart.x)}rad)`;\n      container.appendChild(line);\n\n      // Cleanup old lines if necessary\n      setTimeout(() => line.remove(), 1000);\n    };\n    const positionalCorrection = (s1, s2, collisionInfo) => {\n      const s1InvMass = s1.mInvMass;\n      const s2InvMass = s2.mInvMass;\n      const num = collisionInfo.getDepth() / (s1InvMass + s2InvMass) * mPosCorrectionRate;\n      const correctionAmount = collisionInfo.getNormal().scale(num);\n      s1.move(correctionAmount.scale(-s1InvMass));\n      s2.move(correctionAmount.scale(s2InvMass));\n    };\n    const resolveCollision = (s1, s2, collisionInfo) => {\n      if (s1.mInvMass === 0 && s2.mInvMass === 0) return;\n      if (positionalCorrectionFlag) positionalCorrection(s1, s2, collisionInfo);\n      const n = collisionInfo.getNormal();\n      const v1 = s1.mVelocity;\n      const v2 = s2.mVelocity;\n      const relativeVelocity = v2.subtract(v1);\n      const rVelocityInNormal = relativeVelocity.dot(n);\n      if (rVelocityInNormal > 0) return;\n      const newRestitution = Math.min(s1.mRestitution, s2.mRestitution);\n      const newFriction = Math.min(s1.mFriction, s2.mFriction);\n      let jN = -(1 + newRestitution) * rVelocityInNormal;\n      jN = jN / (s1.mInvMass + s2.mInvMass);\n      let impulse = n.scale(jN);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n      let tangent = relativeVelocity.subtract(n.scale(relativeVelocity.dot(n)));\n      tangent = tangent.normalize().scale(-1);\n      let jT = -(1 + newRestitution) * relativeVelocity.dot(tangent) * newFriction;\n      jT = jT / (s1.mInvMass + s2.mInvMass);\n      if (jT > jN) jT = jN;\n      impulse = tangent.scale(jT);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n    };\n    for (let k = 0; k < relaxationCount; k++) {\n      for (let i = 0; i < allObjectsRef.current.length; i++) {\n        for (let j = i + 1; j < allObjectsRef.current.length; j++) {\n          if (allObjectsRef.current[i].boundTest(allObjectsRef.current[j])) {\n            if (allObjectsRef.current[i].collisionTest(allObjectsRef.current[j], collisionInfo)) {\n              if (collisionInfo.getNormal().dot(allObjectsRef.current[j].mCenter.subtract(allObjectsRef.current[i].mCenter)) < 0) {\n                collisionInfo.changeDir();\n              }\n              drawCollisionInfo(collisionInfo);\n              resolveCollision(allObjectsRef.current[i], allObjectsRef.current[j], collisionInfo);\n            }\n          }\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const container = containerRef.current;\n    container.style.position = 'relative';\n    container.style.width = '800px';\n    container.style.height = '450px';\n    container.style.border = '1px solid black';\n    let r1 = new Rectangle(new Vec2(200, 200), 40, 40);\n    allObjectsRef.current = [r1];\n    const runGameLoop = () => {\n      updateGameObjects();\n      requestAnimationFrame(runGameLoop);\n    };\n    runGameLoop();\n    const intervalId = setInterval(() => {\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n      let r1 = new Rectangle(new Vec2(randomX, randomY), 40, 40);\n      allObjectsRef.current = [...allObjectsRef.current, r1];\n    }, 5000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeyHandler, {\n      allObjectsRef: allObjectsRef,\n      gObjectNumRef: gObjectNumRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Cgiod2KedYSKF23C8uLKyg9ylIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","Vec2","Rectangle","CollisionInfo","KeyHandler","jsxDEV","_jsxDEV","App","_s","containerRef","allObjectsRef","gObjectNumRef","positionalCorrectionFlag","relaxationCount","mPosCorrectionRate","updateGameObjects","container","current","width","clientWidth","height","clientHeight","forEach","obj","update","draw","collisionInfo","drawCollisionInfo","line","document","createElement","style","position","backgroundColor","left","mStart","x","top","y","Math","hypot","mEnd","transformOrigin","transform","atan2","appendChild","setTimeout","remove","positionalCorrection","s1","s2","s1InvMass","mInvMass","s2InvMass","num","getDepth","correctionAmount","getNormal","scale","move","resolveCollision","n","v1","mVelocity","v2","relativeVelocity","subtract","rVelocityInNormal","dot","newRestitution","min","mRestitution","newFriction","mFriction","jN","impulse","add","tangent","normalize","jT","k","i","length","j","boundTest","collisionTest","mCenter","changeDir","border","r1","runGameLoop","requestAnimationFrame","intervalId","setInterval","randomX","random","randomY","clearInterval","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/apps/physics/physics_engine/React/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport CollisionInfo from './CollisionInfo';\nimport KeyHandler from './KeyHandler';\n\nconst App = () => {\n  const containerRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n\n  const positionalCorrectionFlag = true;\n  const relaxationCount = 15;\n  const mPosCorrectionRate = 0.8;\n\n  const updateGameObjects = () => {\n    const container = containerRef.current;\n    const width = container.clientWidth;\n    const height = container.clientHeight;\n\n    allObjectsRef.current.forEach((obj) => {\n      obj.update({ width, height });\n      obj.draw(container);\n    });\n\n    const collisionInfo = new CollisionInfo();\n\n    const drawCollisionInfo = (collisionInfo) => {\n      // Use DOM elements to show collision info if needed\n      const line = document.createElement('div');\n      line.style.position = 'absolute';\n      line.style.width = '2px';\n      line.style.backgroundColor = 'green';\n      line.style.left = `${collisionInfo.mStart.x}px`;\n      line.style.top = `${collisionInfo.mStart.y}px`;\n      line.style.height = `${Math.hypot(\n        collisionInfo.mEnd.x - collisionInfo.mStart.x,\n        collisionInfo.mEnd.y - collisionInfo.mStart.y\n      )}px`;\n      line.style.transformOrigin = '0 0';\n      line.style.transform = `rotate(${Math.atan2(\n        collisionInfo.mEnd.y - collisionInfo.mStart.y,\n        collisionInfo.mEnd.x - collisionInfo.mStart.x\n      )}rad)`;\n      container.appendChild(line);\n\n      // Cleanup old lines if necessary\n      setTimeout(() => line.remove(), 1000);\n    };\n\n    const positionalCorrection = (s1, s2, collisionInfo) => {\n      const s1InvMass = s1.mInvMass;\n      const s2InvMass = s2.mInvMass;\n      const num =\n        (collisionInfo.getDepth() / (s1InvMass + s2InvMass)) *\n        mPosCorrectionRate;\n      const correctionAmount = collisionInfo.getNormal().scale(num);\n      s1.move(correctionAmount.scale(-s1InvMass));\n      s2.move(correctionAmount.scale(s2InvMass));\n    };\n\n    const resolveCollision = (s1, s2, collisionInfo) => {\n      if (s1.mInvMass === 0 && s2.mInvMass === 0) return;\n\n      if (positionalCorrectionFlag) positionalCorrection(s1, s2, collisionInfo);\n      const n = collisionInfo.getNormal();\n      const v1 = s1.mVelocity;\n      const v2 = s2.mVelocity;\n      const relativeVelocity = v2.subtract(v1);\n      const rVelocityInNormal = relativeVelocity.dot(n);\n\n      if (rVelocityInNormal > 0) return;\n\n      const newRestitution = Math.min(s1.mRestitution, s2.mRestitution);\n      const newFriction = Math.min(s1.mFriction, s2.mFriction);\n\n      let jN = -(1 + newRestitution) * rVelocityInNormal;\n      jN = jN / (s1.mInvMass + s2.mInvMass);\n\n      let impulse = n.scale(jN);\n\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n\n      let tangent = relativeVelocity.subtract(\n        n.scale(relativeVelocity.dot(n))\n      );\n\n      tangent = tangent.normalize().scale(-1);\n      let jT =\n        -(1 + newRestitution) * relativeVelocity.dot(tangent) * newFriction;\n      jT = jT / (s1.mInvMass + s2.mInvMass);\n\n      if (jT > jN) jT = jN;\n\n      impulse = tangent.scale(jT);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n    };\n\n    for (let k = 0; k < relaxationCount; k++) {\n      for (let i = 0; i < allObjectsRef.current.length; i++) {\n        for (let j = i + 1; j < allObjectsRef.current.length; j++) {\n          if (\n            allObjectsRef.current[i].boundTest(allObjectsRef.current[j])\n          ) {\n            if (\n              allObjectsRef.current[i].collisionTest(\n                allObjectsRef.current[j],\n                collisionInfo\n              )\n            ) {\n              if (\n                collisionInfo\n                  .getNormal()\n                  .dot(\n                    allObjectsRef.current[j].mCenter.subtract(\n                      allObjectsRef.current[i].mCenter\n                    )\n                  ) < 0\n              ) {\n                collisionInfo.changeDir();\n              }\n\n              drawCollisionInfo(collisionInfo);\n              resolveCollision(\n                allObjectsRef.current[i],\n                allObjectsRef.current[j],\n                collisionInfo\n              );\n            }\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const container = containerRef.current;\n    container.style.position = 'relative';\n    container.style.width = '800px';\n    container.style.height = '450px';\n    container.style.border = '1px solid black';\n\n    let r1 = new Rectangle(new Vec2(200, 200), 40, 40);\n    allObjectsRef.current = [r1];\n\n    const runGameLoop = () => {\n      updateGameObjects();\n      requestAnimationFrame(runGameLoop);\n    };\n\n    runGameLoop();\n\n    const intervalId = setInterval(() => {\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n\n      let r1 = new Rectangle(new Vec2(randomX, randomY), 40, 40);\n      allObjectsRef.current = [...allObjectsRef.current, r1];\n    }, 5000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div ref={containerRef}></div>\n      <KeyHandler allObjectsRef={allObjectsRef} gObjectNumRef={gObjectNumRef} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}