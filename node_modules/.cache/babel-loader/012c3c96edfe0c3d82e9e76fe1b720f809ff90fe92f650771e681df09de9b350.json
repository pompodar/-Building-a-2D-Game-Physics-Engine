{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/apps/physics/physics_engine/physics-engine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport Circle from './Circle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n  const updateGameObjects = context => {\n    const canvas = canvasRef.current;\n    const width = canvas.width;\n    const height = canvas.height;\n    context.clearRect(0, 0, width, height);\n    allObjectsRef.current.forEach(obj => {\n      obj.update(canvas);\n      obj.draw(context);\n    });\n  };\n  const checkCollisions = context => {\n    const allObjects = allObjectsRef.current;\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = i + 1; j < allObjects.length; j++) {\n        if (allObjects[i].boundTest(allObjects[j])) {\n          console.log('collide');\n          context.strokeStyle = 'green';\n          allObjects[i].draw(context);\n          allObjects[j].draw(context);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = 800;\n    canvas.height = 450;\n\n    // Initial objects setup\n    let r1 = new Rectangle(new Vec2(200, 200), 40, 40, false);\n    allObjectsRef.current = [r1];\n    const runGameLoop = () => {\n      updateGameObjects(context);\n      checkCollisions(context);\n      requestAnimationFrame(runGameLoop);\n    };\n    runGameLoop();\n\n    // Add new rectangles at random positions every 5 seconds\n    const intervalId = setInterval(() => {\n      const width = canvas.width;\n      const height = canvas.height;\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n      let r1 = new Rectangle(new Vec2(randomX, randomY), 40, 40, false);\n      allObjectsRef.current = [...allObjectsRef.current, r1];\n    }, 5000);\n    return () => {\n      clearInterval(intervalId); // Clean up the interval on component unmount\n    };\n  }, []);\n  const handleKeyDown = useCallback(event => {\n    const keycode = event.keyCode || event.which;\n    const allObjects = allObjectsRef.current;\n    const gObjectNum = gObjectNumRef.current;\n\n    // Handle key events for object manipulation\n    if (keycode === 70) {\n      // F\n      let r1 = new Rectangle(new Vec2(allObjects[gObjectNum].mCenter.x + 200, allObjects[gObjectNum].mCenter.y + 20), Math.random() * 30 + 10, Math.random() * 30 + 10);\n      allObjectsRef.current = [...allObjects, r1];\n    }\n    if (keycode === 71) {\n      // G\n      let r1 = new Circle(new Vec2(allObjects[gObjectNum].mCenter.x, allObjects[gObjectNum].mCenter.y), Math.random() * 10 + 20);\n      allObjectsRef.current = [...allObjects, r1];\n    }\n\n    // Additional key controls omitted for brevity...\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sAJ9eq1jhL0teZEU1AbouU6mX3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Vec2","Rectangle","Circle","jsxDEV","_jsxDEV","App","_s","canvasRef","allObjectsRef","gObjectNumRef","updateGameObjects","context","canvas","current","width","height","clearRect","forEach","obj","update","draw","checkCollisions","allObjects","i","length","j","boundTest","console","log","strokeStyle","getContext","r1","runGameLoop","requestAnimationFrame","intervalId","setInterval","randomX","Math","random","randomY","clearInterval","handleKeyDown","event","keycode","keyCode","which","gObjectNum","mCenter","x","y","window","addEventListener","removeEventListener","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/apps/physics/physics_engine/physics-engine/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport Circle from './Circle';\n\nconst App = () => {\n  const canvasRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n\n  const updateGameObjects = (context) => {\n    const canvas = canvasRef.current;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    context.clearRect(0, 0, width, height);\n\n    allObjectsRef.current.forEach((obj) => {\n      obj.update(canvas);\n      obj.draw(context);\n    });\n  };\n\n  const checkCollisions = (context) => {\n    const allObjects = allObjectsRef.current;\n\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = i + 1; j < allObjects.length; j++) {\n        if (allObjects[i].boundTest(allObjects[j])) {\n          console.log('collide');\n\n          context.strokeStyle = 'green';\n          allObjects[i].draw(context);\n          allObjects[j].draw(context);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = 800;\n    canvas.height = 450;\n\n    // Initial objects setup\n    let r1 = new Rectangle(new Vec2(200, 200), 40, 40, false);\n    allObjectsRef.current = [r1];\n\n    const runGameLoop = () => {\n      updateGameObjects(context);\n      checkCollisions(context);\n      requestAnimationFrame(runGameLoop);\n    };\n\n    runGameLoop();\n\n    // Add new rectangles at random positions every 5 seconds\n    const intervalId = setInterval(() => {\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n\n      let r1 = new Rectangle(new Vec2(randomX, randomY), 40, 40, false);\n      allObjectsRef.current = [...allObjectsRef.current, r1];\n    }, 5000);\n\n    return () => {\n      clearInterval(intervalId); // Clean up the interval on component unmount\n    };\n  }, []);\n\n  const handleKeyDown = useCallback((event) => {\n    const keycode = event.keyCode || event.which;\n    const allObjects = allObjectsRef.current;\n    const gObjectNum = gObjectNumRef.current;\n\n    // Handle key events for object manipulation\n    if (keycode === 70) { // F\n      let r1 = new Rectangle(\n        new Vec2(allObjects[gObjectNum].mCenter.x + 200, allObjects[gObjectNum].mCenter.y + 20),\n        Math.random() * 30 + 10,\n        Math.random() * 30 + 10\n      );\n      allObjectsRef.current = [...allObjects, r1];\n    }\n\n    if (keycode === 71) { // G\n      let r1 = new Circle(\n        new Vec2(allObjects[gObjectNum].mCenter.x, allObjects[gObjectNum].mCenter.y),\n        Math.random() * 10 + 20\n      );\n      allObjectsRef.current = [...allObjects, r1];\n    }\n\n    // Additional key controls omitted for brevity...\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} style={{ border: '1px solid black' }}></canvas>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}