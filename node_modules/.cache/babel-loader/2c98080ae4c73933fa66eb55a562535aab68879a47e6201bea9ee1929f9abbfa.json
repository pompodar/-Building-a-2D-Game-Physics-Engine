{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/apps/physics/physics_engine/physics-engine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport Circle from './Circle';\nimport CollisionInfo from './CollisionInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const GRAVITY = new Vec2(0, 10);\n  const positionalCorrectionFlag = true;\n  const relaxationCount = 15;\n  const mPosCorrectionRate = 0.8;\n  const canvasRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n  const updateGameObjects = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    context.clearRect(0, 0, width, height);\n    allObjectsRef.current.forEach(obj => {\n      obj.update(canvas);\n      obj.draw(context);\n    });\n    const collisionInfo = new CollisionInfo();\n    const drawCollisionInfo = (collisionInfo, context) => {\n      context.beginPath();\n      context.moveTo(collisionInfo.mStart.x, collisionInfo.mStart.y);\n      context.lineTo(collisionInfo.mEnd.x, collisionInfo.mEnd.y);\n      context.closePath();\n      context.strokeStyle = 'green';\n      context.stroke();\n    };\n    const positionalCorrection = (s1, s2, collisionInfo) => {\n      const s1InvMass = s1.mInvMass;\n      const s2InvMass = s2.mInvMass;\n      const correctionAmount = collisionInfo.getNormal().scale(collisionInfo.getDepth() / (s1InvMass + s2InvMass) * mPosCorrectionRate);\n      s1.move(correctionAmount.scale(-s1InvMass));\n      s2.move(correctionAmount.scale(s2InvMass));\n    };\n    const resolveCollision = (s1, s2, collisionInfo) => {\n      if (s1.mInvMass === 0 && s2.mInvMass === 0) return;\n      if (positionalCorrectionFlag) positionalCorrection(s1, s2, collisionInfo);\n      const n = collisionInfo.getNormal();\n      const v1 = s1.mVelocity;\n      const v2 = s2.mVelocity;\n      const relativeVelocity = v2.subtract(v1);\n      const rVelocityInNormal = relativeVelocity.dot(n);\n      if (rVelocityInNormal > 0) return;\n      const newRestitution = Math.min(s1.mRestitution, s2.mRestitution);\n      const newFriction = Math.min(s1.mFriction, s2.mFriction);\n      let jN = -(1 + newRestitution) * rVelocityInNormal;\n      jN /= s1.mInvMass + s2.mInvMass;\n      let impulse = n.scale(jN);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n      let tangent = relativeVelocity.subtract(n.scale(relativeVelocity.dot(n)));\n      tangent = tangent.normalize().scale(-1);\n      let jT = -(1 + newRestitution) * relativeVelocity.dot(tangent) * newFriction;\n      jT /= s1.mInvMass + s2.mInvMass;\n      if (jT > jN) jT = jN;\n      impulse = tangent.scale(jT);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n    };\n    for (let k = 0; k < relaxationCount; k++) {\n      for (let i = 0; i < allObjectsRef.current.length; i++) {\n        for (let j = i + 1; j < allObjectsRef.current.length; j++) {\n          if (allObjectsRef.current[i].boundTest(allObjectsRef.current[j])) {\n            if (allObjectsRef.current[i].collisionTest(allObjectsRef.current[j], collisionInfo)) {\n              if (collisionInfo.getNormal().dot(allObjectsRef.current[j].mCenter.subtract(allObjectsRef.current[i].mCenter)) < 0) {\n                collisionInfo.changeDir();\n              }\n              drawCollisionInfo(collisionInfo, context);\n              resolveCollision(allObjectsRef.current[i], allObjectsRef.current[j], collisionInfo);\n            }\n          }\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 450;\n    const initialObject = new Rectangle(new Vec2(200, 200), 40, 40);\n    allObjectsRef.current = [initialObject];\n    const runGameLoop = () => {\n      updateGameObjects();\n      requestAnimationFrame(runGameLoop);\n    };\n    runGameLoop();\n    const intervalId = setInterval(() => {\n      const canvas = canvasRef.current;\n      const width = canvas.width;\n      const height = canvas.height;\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n      const newRectangle = new Rectangle(new Vec2(randomX, randomY), 40, 40);\n      allObjectsRef.current = [...allObjectsRef.current, newRectangle];\n    }, 5000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const handleKeyDown = useCallback(event => {\n    const keycode = event.keyCode || event.which;\n    const allObjects = allObjectsRef.current;\n    const gObjectNum = gObjectNumRef.current;\n    switch (keycode) {\n      case 70:\n        // F\n        const r1 = new Rectangle(new Vec2(allObjects[gObjectNum].mCenter.x + 200, allObjects[gObjectNum].mCenter.y + 20), Math.random() * 30 + 10, Math.random() * 30 + 10, 200, 200, 1);\n        const r5 = new Rectangle(new Vec2(500, 200), 400, 20, 1, 1, 1);\n        r5.rotate(2.8);\n        const r6 = new Rectangle(new Vec2(200, 400), 400, 20, 20, 1, 0.5);\n        allObjectsRef.current = [...allObjects, r1, r5, r6];\n        break;\n      case 71:\n        // G\n        const rCircle = new Circle(new Vec2(allObjects[gObjectNum].mCenter.x, allObjects[gObjectNum].mCenter.y), Math.random() * 10 + 20);\n        allObjectsRef.current = [...allObjects, rCircle];\n        break;\n      case 38:\n        // Up arrow\n        if (gObjectNum > 0) {\n          gObjectNumRef.current--;\n        }\n        break;\n      case 40:\n        // Down arrow\n        if (gObjectNum < allObjects.length - 1) {\n          gObjectNumRef.current++;\n        }\n        break;\n      case 87:\n        // W\n        allObjects[gObjectNum].move(new Vec2(0, -10));\n        break;\n      case 83:\n        // S\n        allObjects[gObjectNum].move(new Vec2(0, 10));\n        break;\n      case 65:\n        // A\n        allObjects[gObjectNum].move(new Vec2(-10, 0));\n        break;\n      case 68:\n        // D\n        allObjects[gObjectNum].move(new Vec2(10, 0));\n        break;\n      case 81:\n        // Q\n        allObjects[gObjectNum].rotate(-0.1);\n        break;\n      case 69:\n        // E\n        allObjects[gObjectNum].rotate(0.1);\n        break;\n      case 72:\n        // H\n        const currentObj = allObjects[gObjectNum];\n        currentObj.mFix = currentObj.mFix === 0 ? 1 : 0;\n        break;\n      case 82:\n        // R\n        allObjectsRef.current.splice(1, allObjects.length - 1); // Keep only the first object\n        gObjectNumRef.current = 0;\n        break;\n      default:\n        if (keycode >= 48 && keycode <= 57) {\n          // Number keys\n          const index = keycode - 48;\n          if (index < allObjects.length) {\n            gObjectNumRef.current = index;\n          }\n        }\n    }\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sAJ9eq1jhL0teZEU1AbouU6mX3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Vec2","Rectangle","Circle","CollisionInfo","jsxDEV","_jsxDEV","App","_s","GRAVITY","positionalCorrectionFlag","relaxationCount","mPosCorrectionRate","canvasRef","allObjectsRef","gObjectNumRef","updateGameObjects","canvas","current","context","getContext","width","height","clearRect","forEach","obj","update","draw","collisionInfo","drawCollisionInfo","beginPath","moveTo","mStart","x","y","lineTo","mEnd","closePath","strokeStyle","stroke","positionalCorrection","s1","s2","s1InvMass","mInvMass","s2InvMass","correctionAmount","getNormal","scale","getDepth","move","resolveCollision","n","v1","mVelocity","v2","relativeVelocity","subtract","rVelocityInNormal","dot","newRestitution","Math","min","mRestitution","newFriction","mFriction","jN","impulse","add","tangent","normalize","jT","k","i","length","j","boundTest","collisionTest","mCenter","changeDir","initialObject","runGameLoop","requestAnimationFrame","intervalId","setInterval","randomX","random","randomY","newRectangle","clearInterval","handleKeyDown","event","keycode","keyCode","which","allObjects","gObjectNum","r1","r5","rotate","r6","rCircle","currentObj","mFix","splice","index","window","addEventListener","removeEventListener","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/apps/physics/physics_engine/physics-engine/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport Vec2 from './Vec2';\nimport Rectangle from './Rectangle';\nimport Circle from './Circle';\nimport CollisionInfo from './CollisionInfo';\n\nconst App = () => {\n  const GRAVITY = new Vec2(0, 10);\n  const positionalCorrectionFlag = true;\n  const relaxationCount = 15;\n  const mPosCorrectionRate = 0.8;\n\n  const canvasRef = useRef(null);\n  const allObjectsRef = useRef([]);\n  const gObjectNumRef = useRef(0);\n\n  const updateGameObjects = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    context.clearRect(0, 0, width, height);\n\n    allObjectsRef.current.forEach(obj => {\n      obj.update(canvas);\n      obj.draw(context);\n    });\n\n    const collisionInfo = new CollisionInfo();\n\n    const drawCollisionInfo = (collisionInfo, context) => {\n      context.beginPath();\n      context.moveTo(collisionInfo.mStart.x, collisionInfo.mStart.y);\n      context.lineTo(collisionInfo.mEnd.x, collisionInfo.mEnd.y);\n      context.closePath();\n      context.strokeStyle = 'green';\n      context.stroke();\n    };\n\n    const positionalCorrection = (s1, s2, collisionInfo) => {\n      const s1InvMass = s1.mInvMass;\n      const s2InvMass = s2.mInvMass;\n      const correctionAmount = collisionInfo.getNormal()\n        .scale((collisionInfo.getDepth() / (s1InvMass + s2InvMass)) * mPosCorrectionRate);\n      s1.move(correctionAmount.scale(-s1InvMass));\n      s2.move(correctionAmount.scale(s2InvMass));\n    };\n\n    const resolveCollision = (s1, s2, collisionInfo) => {\n      if (s1.mInvMass === 0 && s2.mInvMass === 0) return;\n\n      if (positionalCorrectionFlag) positionalCorrection(s1, s2, collisionInfo);\n\n      const n = collisionInfo.getNormal();\n      const v1 = s1.mVelocity;\n      const v2 = s2.mVelocity;\n      const relativeVelocity = v2.subtract(v1);\n      const rVelocityInNormal = relativeVelocity.dot(n);\n\n      if (rVelocityInNormal > 0) return;\n\n      const newRestitution = Math.min(s1.mRestitution, s2.mRestitution);\n      const newFriction = Math.min(s1.mFriction, s2.mFriction);\n\n      let jN = -(1 + newRestitution) * rVelocityInNormal;\n      jN /= (s1.mInvMass + s2.mInvMass);\n\n      let impulse = n.scale(jN);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n\n      let tangent = relativeVelocity.subtract(n.scale(relativeVelocity.dot(n)));\n      tangent = tangent.normalize().scale(-1);\n\n      let jT = -(1 + newRestitution) * relativeVelocity.dot(tangent) * newFriction;\n      jT /= (s1.mInvMass + s2.mInvMass);\n\n      if (jT > jN) jT = jN;\n\n      impulse = tangent.scale(jT);\n      s1.mVelocity = s1.mVelocity.subtract(impulse.scale(s1.mInvMass));\n      s2.mVelocity = s2.mVelocity.add(impulse.scale(s2.mInvMass));\n    };\n\n    for (let k = 0; k < relaxationCount; k++) {\n      for (let i = 0; i < allObjectsRef.current.length; i++) {\n        for (let j = i + 1; j < allObjectsRef.current.length; j++) {\n          if (allObjectsRef.current[i].boundTest(allObjectsRef.current[j])) {\n            if (allObjectsRef.current[i].collisionTest(allObjectsRef.current[j], collisionInfo)) {\n              if (\n                collisionInfo.getNormal().dot(\n                  allObjectsRef.current[j].mCenter.subtract(allObjectsRef.current[i].mCenter)\n                ) < 0\n              ) {\n                collisionInfo.changeDir();\n              }\n\n              drawCollisionInfo(collisionInfo, context);\n              resolveCollision(allObjectsRef.current[i], allObjectsRef.current[j], collisionInfo);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 450;\n\n    const initialObject = new Rectangle(new Vec2(200, 200), 40, 40);\n    allObjectsRef.current = [initialObject];\n\n    const runGameLoop = () => {\n      updateGameObjects();\n      requestAnimationFrame(runGameLoop);\n    };\n\n    runGameLoop();\n\n    const intervalId = setInterval(() => {\n      const canvas = canvasRef.current;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const randomX = Math.random() * width;\n      const randomY = Math.random() * height;\n\n      const newRectangle = new Rectangle(new Vec2(randomX, randomY), 40, 40);\n      allObjectsRef.current = [...allObjectsRef.current, newRectangle];\n    }, 5000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const handleKeyDown = useCallback((event) => {\n    const keycode = event.keyCode || event.which;\n    const allObjects = allObjectsRef.current;\n    const gObjectNum = gObjectNumRef.current;\n\n    switch (keycode) {\n      case 70: // F\n        const r1 = new Rectangle(\n          new Vec2(allObjects[gObjectNum].mCenter.x + 200, allObjects[gObjectNum].mCenter.y + 20),\n          Math.random() * 30 + 10,\n          Math.random() * 30 + 10,\n          200,\n          200,\n          1\n        );\n\n        const r5 = new Rectangle(new Vec2(500, 200), 400, 20, 1, 1, 1);\n        r5.rotate(2.8);\n\n        const r6 = new Rectangle(new Vec2(200, 400), 400, 20, 20, 1, 0.5);\n        allObjectsRef.current = [...allObjects, r1, r5, r6];\n        break;\n      case 71: // G\n        const rCircle = new Circle(\n          new Vec2(allObjects[gObjectNum].mCenter.x, allObjects[gObjectNum].mCenter.y),\n          Math.random() * 10 + 20\n        );\n        allObjectsRef.current = [...allObjects, rCircle];\n        break;\n      case 38: // Up arrow\n        if (gObjectNum > 0) {\n          gObjectNumRef.current--;\n        }\n        break;\n      case 40: // Down arrow\n        if (gObjectNum < allObjects.length - 1) {\n          gObjectNumRef.current++;\n        }\n        break;\n      case 87: // W\n        allObjects[gObjectNum].move(new Vec2(0, -10));\n        break;\n      case 83: // S\n        allObjects[gObjectNum].move(new Vec2(0, 10));\n        break;\n      case 65: // A\n        allObjects[gObjectNum].move(new Vec2(-10, 0));\n        break;\n      case 68: // D\n        allObjects[gObjectNum].move(new Vec2(10, 0));\n        break;\n      case 81: // Q\n        allObjects[gObjectNum].rotate(-0.1);\n        break;\n      case 69: // E\n        allObjects[gObjectNum].rotate(0.1);\n        break;\n      case 72: // H\n        const currentObj = allObjects[gObjectNum];\n        currentObj.mFix = currentObj.mFix === 0 ? 1 : 0;\n        break;\n      case 82: // R\n        allObjectsRef.current.splice(1, allObjects.length - 1); // Keep only the first object\n        gObjectNumRef.current = 0;\n        break;\n      default:\n        if (keycode >= 48 && keycode <= 57) { // Number keys\n          const index = keycode - 48;\n          if (index < allObjects.length) {\n            gObjectNumRef.current = index;\n          }\n        }\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} style={{ border: '1px solid black' }}></canvas>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}